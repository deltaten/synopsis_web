Чтобы создать форму, нужно использовать парный тег <form>, внутри которого размещаются поля формы. У тега <form> есть два важных атрибута:
action задаёт адрес, URL, отправки формы;
method задаёт метод отправки формы.

<form action="https://echo.htmlacademy.ru" method="get">
  поля формы
</form>

Для отправки формы обычно используют методы get или post. Если не указать атрибут method, то будет использован get.

Метод get посылает данные формы в строке запроса, то есть они видны в адресной строке браузера и следуют после знака вопроса. Например:

https://www.google.com/search?q=htmlacademy
Метод get лучше использовать в поисковых формах, потому что он позволяет получить ссылку на результаты поиска и передать её кому-то.

Метод post посылает данные в теле HTTP-запроса и используется, когда нужно отправить много данных и ссылка на результат обработки этих данных не нужна. Например, при редактировании личного профиля.
---------------------------------------------------------------------------------------------
Большинство полей форм создаётся с помощью одиночного тега <input>. У этого тега два обязательных атрибута:

type задаёт тип поля;

name задаёт имя поля.

Тип поля влияет на то, как оно будет отображаться и вести себя. Самый распространённый тип — это text, который обозначает текстовое поле. Он же используется по умолчанию. Пример:

<form action="https://echo.htmlacademy.ru" method="get">
  <input type="text" name="search">
</form>
Имя поля нужно, чтобы правильно обработать данные на сервере. Обычно, имя поля должно быть уникальным в пределах формы, хотя есть исключения. Для задания имени поля используют латинские буквы и цифры.
---------------------------------------------------------------------------------------------
value задаёт значение поля ввода по умолчанию.
---------------------------------------------------------------------------------------------
<label> связывает текст и поле ввода логически.
<label>
  Подпись <input type="text" name="username">
</label>
---------------------------------------------------------------------------------------------
Связываем подпись и поле по id
<label for="user-field-id">Имя пользователя</label>
...
много-много других тегов
...
<input id="user-field-id" type="text" name="username">
---------------------------------------------------------------------------------------------
<input type="submit" value="Войти"> */ кнопка
---------------------------------------------------------------------------------------------
Многострочное текстовое поле создаётся с помощью парного тега <textarea>. У него есть атрибуты name и id, которые аналогичны атрибутам текстового поля.

Атрибут rows принимает целочисленное значение и задаёт высоту многострочного поля в строках. Атрибут cols задаёт ширину поля в символах. В качестве ширины символа берётся некоторая «усреднённая ширина».

Атрибут value у многострочного поля отсутствует, а значение по умолчанию задаётся по-другому. Текст, расположенный между открывающим и закрывающим тегом <textarea> и является значением по умолчанию.
---------------------------------------------------------------------------------------------
<input type="checkbox" checked>
---------------------------------------------------------------------------------------------
<select name="theme">
  <option value="light">Светлая тема</option>
  <option value="dark">Тёмная тема</option>
  ...
</select>
---------------------------------------------------------------------------------------------
Чтобы сделать Мультиселект, нужно добавить к тегу <select> атрибут multiple.
Высоту мультиселекта можно изменять с помощью атрибута size тега <select>.
Чтобы отметить как выбранные по умолчанию одно или несколько значений, нужно к соответствующим тегам <option> добавить атрибут selected.
При отправке данных мультиселекта на сервер с PHP после имени в значении атрибута name ставятся символы квадратных скобок []. Например, <select name="days[]">. Это необязательное требование для имени мультиселекта, а нужно только для корректной обработки данных в PHP.
---------------------------------------------------------------------------------------------
Поле для загрузки файлов — это тег <input> с типом file. Для этого поля обязательным атрибутом является имя.
Чтобы поле заработало и браузер смог передать выбранный файл на сервер, необходимо добавить форме атрибут enctype со значением multipart/form-data. Не полю, а форме.
---------------------------------------------------------------------------------------------
Скрытое поле — это тег <input> с типом hidden.
---------------------------------------------------------------------------------------------
кнопка, которая сбрасывает введённые значения и возвращает изначально установленные. Это поле ввода с типом reset.
<input type="reset" value="Сбросить">
Помимо кнопок отправки формы или сброса введенных значений, существуют и «просто кнопки». При нажатии на такую кнопку никаких действий не происходит, а все необходимые действия обычно задаются при помощи JavaScript.
<input type="button" value="Кнопка">
---------------------------------------------------------------------------------------------
В качестве кнопки отправки формы можно использовать изображение.
Для этого у тега input нужно указать тип image.
Аналогично обычным изображениям на сайте у кнопки-изображения есть еще два атрибута:
src	адрес изображения
alt	альтернативный текст, отображаемый в том случае, если изображение не загружено
Кнопка-изображение работает аналогично кнопке submit, но на сервер дополнительно передаются координаты точки, по которой был произведен щелчок.
---------------------------------------------------------------------------------------------
Помимо тега <input> для добавления кнопок можно использовать тег <button>. Он расширяет возможности создания кнопок.
Внутри тега <button> можно размещать любые HTML-элементы, в том числе изображения. Например:
<button>Календарь <img src="calend.png" alt=""></button>
Если в атрибуте type тега <button> указать значение submit или reset, то кнопка будет отправлять данные на сервер или сбрасывать введенные значения.
По умолчанию значение атрибута type — submit.
То есть внутри формы кнопка <button> по нажатию отправит форму на сервер.
Значениями атрибута type также могут быть button и reset.
Кнопка button со значением type="reset" аналогично input type="reset" сбрасывает значения полей формы к изначальным.
А вот значение type="button" избавит кнопку от всей изначальной функциональности. То есть кнопка просто будет выглядеть как кнопка, но ничего по умолчанию не делать. Это удобно, если вы хотите сами добавить кнопке дополнительное действие с помощью JavaScript.
---------------------------------------------------------------------------------------------
Чтобы указать, что поле обязательно для заполнения, нужно добавить ему пустой атрибут required:
<input type="text" required>
---------------------------------------------------------------------------------------------
<input type="date"> */открывает календарь
<input type="time"> */поле выбора времени
<input type="search"> */Поле поиска
datetime	выбор даты с указанием времени (c учетом временной зоны)
datetime-local	выбор даты с указанием времени (без учета временной зоны)
week	выбор порядкового номера недели в году и года
month	выбор месяца и года
---------------------------------------------------------------------------------------------
Список возможных значений:
<input type="text" list="browsers" name="browser">
<datalist id="browsers">
  <option value="Firefox"></option>
  <option value="Chrome"></option>
  <option value="Safari"></option>
</datalist>
Связывание текстового поля и списка осуществляется при помощи атрибута list у тега input — значение list должно быть таким же, как значение атрибута id у списка.
---------------------------------------------------------------------------------------------
<input type="number"> */Поле ввода числового значения
Рядом с полем браузер автоматически подставляет две стрелочки для увеличения и уменьшения числового значения.
При помощи вспомогательных атрибутов min и max можно установить верхнюю и нижнюю границу допустимых значений. А атрибут step устанавливает величину шага изменения значения.
---------------------------------------------------------------------------------------------
<input type="range" min="1" max="10">
Такое поле выглядит как шкала с ползунком и позволяет выбрать число из некоторого интервала значений.
А атрибут step устанавливает величину шага изменения значения.
---------------------------------------------------------------------------------------------
<output name="sum">[значение по умолчанию]</output>
Тег <output> представляет собой область, куда выводятся какие-либо результаты вычислений, обычно полученные при помощи JavaScript.
Группировка полей формы:
<fieldset>
  <legend>Заголовок группы</legend>
  <input type="text">
  <input type="text">
  <input type="text">
</fieldset>
<fieldset>
  <textarea></textarea>
</fieldset>
-------------------------------------------------------------------------------------------
<input type="text" placeholder="Текст подсказки">
-------------------------------------------------------------------------------------------
Группировка элементов списка:
<select name="variants">
  <optgroup label="Группа вариантов 1">
    <option value="1">Вариант 1</option>
    <option value="2">Вариант 2</option>
    <option value="3">Вариант 3</option>
  </optgroup>
  <optgroup label="Группа вариантов 2">
    <option value="4">Вариант 4</option>
    <option value="5">Вариант 5</option>
    <option value="6">Вариант 6</option>
  </optgroup>
</select>
-------------------------------------------------------------------------------------------
<input type="text" readonly>
Атрибут readonly не дает пользователю изменять поле (вводить новый текст, модифицировать существующий). Введенное значение можно выделить и скопировать. Данные из этого поля отправляются на сервер.
-------------------------------------------------------------------------------------------
<input type="text" disabled>
Атрибут disabled не дает пользователю изменять поле (вводить новый текст, модифицировать существующий). Нельзя поставить фокус в это поле, введенное значение нельзя выделять и копировать. Данные из этого поля НЕ отправляются на сервер.Атрибут disabled не дает пользователю изменять поле (вводить новый текст, модифицировать существующий). Нельзя поставить фокус в это поле, введенное значение нельзя выделять и копировать. Данные из этого поля НЕ отправляются на сервер.
-------------------------------------------------------------------------------------------
<input type="text" autocomplete="off"> */Управление автозаполнением полей
-------------------------------------------------------------------------------------------
<input type="text" tabindex="3"> */Переключение между полями клавишей Tab